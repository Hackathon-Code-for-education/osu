x-drimmm-common:
    &drimmm-common
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - drimmm_network

x-drimmm-common-db:
  &drimmm-common-db
  <<: *drimmm-common
  image: postgres:15.2-alpine3.17
  healthcheck:
    test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    interval: 5s
    timeout: 2s
    retries: 3
  environment:
    POSTGRES_HOST_AUTH_METHOD: trust

version: '3.8'
services:
  nginx:
    <<: *drimmm-common
    image: nginx:1.23.3
    container_name: nginx
    healthcheck:
      test: curl -f http://localhost:80 || exit 1
    ports:
      - "8080:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      api-service:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M

  pgadmin:
    image: elestio/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=drimmm
      - PGADMIN_DEFAULT_PASSWORD=SLSLSL

    depends_on:
      keycloak-db:
        condition: service_healthy

  api-service:
    <<: *drimmm-common
    image: api-service
    container_name: api-service
    healthcheck:
      test: curl -f http://localhost:5000/version || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
    #    ports:
    #      - "8020:5000"
    environment:
      AUTH_SERVICE_EXT_URL: ${AUTH_SERVICE_EXT_URL}
      SERVER_URL: ${SERVER_URL}
      AUTHORIZATION_URL: ${AUTH_SERVICE_EXT_URL}/realms/master/protocol/openid-connect/auth
      TOKEN_URL: ${AUTH_SERVICE_EXT_URL}/realms/master/protocol/openid-connect/token
    depends_on:
      main-db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1024M

  frontend:
    <<: *drimmm-common
    image: frontend
    container_name: frontend
    healthcheck:
      test: curl -f http://localhost:80/ || exit 1
#    ports:
#      - 8080:80

  keycloak-db:
    <<: *drimmm-common-db
    container_name: keycloak-db
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  keycloak:
    <<: *drimmm-common
    image: quay.io/keycloak/keycloak:20.0.5
    container_name: keycloak
    healthcheck:
      test: curl -f http://localhost:8080/auth/health/ready || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    command:
      - "start-dev"
      - "--health-enabled=true"
      - "--http-relative-path=/auth"
      - "--hostname-strict=false"
      - "--proxy=edge"
      - "--db=postgres"
      - "--db-url-host=keycloak-db"
      - "--db-url-database=postgres"
      - "--db-username=postgres"
    depends_on:
      keycloak-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1536M

  main-db:
    <<: *drimmm-common-db
    container_name: main-db
    volumes:
      - main-db:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1536M

volumes:
  main-db:
    external: true
  keycloak-db:
    external: true

networks:
  drimmm_network:
    external: true
